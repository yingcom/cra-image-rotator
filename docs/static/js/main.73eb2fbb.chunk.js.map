{"version":3,"sources":["styles/panel.module.css","styles/uploader.module.css","components/Uploader.js","components/Panel.js","App.js","index.js"],"names":["module","exports","Uploader","props","callback","fileInputRef","useRef","className","uploadWrapper","htmlFor","uploadBtn","onClick","event","preventDefault","current","click","type","name","id","uploadInput","ref","onChange","file","target","files","substr","Panel","angleRef","useEffect","value","panelWrapper","panelText","width","height","rotateInput","rotateBtn","val","parseInt","App","useState","image","setImage","setFile","clock","setClock","canvasRef","measure","rotate","img","angle","canvas","context","getContext","MAX_WIDTH","MAX_HEIGHT","iw","ih","r","Math","sqrt","r2","scale","min","ax","cos","PI","ay","sin","setTransform","clearRect","drawImage","func","startTime","performance","now","endTime","reader","FileReader","Image","readAsDataURL","onload","src","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73eb2fbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelWrapper\":\"panel_panelWrapper__1L1vv\",\"panelText\":\"panel_panelText__wUYuY\",\"rotateInput\":\"panel_rotateInput__2yn6g\",\"rotateBtn\":\"panel_rotateBtn__2gwKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uploadWrapper\":\"uploader_uploadWrapper__1ECzJ\",\"uploadBtn\":\"uploader_uploadBtn__1-_39\",\"uploadInput\":\"uploader_uploadInput__2hVMi\"};","import { useRef } from 'react'\nimport { uploadWrapper, uploadBtn, uploadInput } from '../styles/uploader.module.css'\n\nfunction Uploader (props) {\n  const { callback } = props\n  const fileInputRef = useRef()\n\n  const click = (event) => {\n    event.preventDefault()\n    fileInputRef.current.click()\n  }\n\n  const changeFile = (event) => {\n    const file = event.target.files[0]\n    if (file && file.type.substr(0, 5) === \"image\") {\n      return callback(file)\n    }\n  }\n\n  return (\n    <div className={uploadWrapper}>\n      <label htmlFor=\"sourceFile\" className={uploadBtn} onClick={click}>Upload Image</label>\n      <input type=\"file\" name=\"sourceFile\" id={uploadInput}\n        ref={fileInputRef}\n        onChange={changeFile} />\n    </div>\n  )\n}\n\nexport default Uploader","import { useRef, useEffect } from 'react'\nimport { panelWrapper, panelText, rotateInput, rotateBtn} from '../styles/panel.module.css'\n\nfunction Panel (props) {\n  const { file, callback } = props\n  const angleRef = useRef()\n\n  useEffect(() => {\n    angleRef.current.value = 0\n  }, [file])\n\n  const changeAngle = (event) => {\n    event.preventDefault()\n    const val = parseInt(angleRef.current.value) || 0 // should check for valid number first\n    return callback(val)\n  }\n\n  return (\n  <div className={panelWrapper}>\n    <div className={panelText}>File: {file.name}</div>\n    <div className={panelText}>Width: {file.width && `${file.width} px`} </div>\n    <div className={panelText}>Height: {file.height && `${file.height} px`} </div>\n    <div className={panelText}>Rotate:\n      <input type=\"number\"\n        name=\"angle\"\n        className={rotateInput}\n        ref={angleRef} />\n      <label htmlFor=\"angle\"\n        className={rotateBtn}\n        onClick={changeAngle}>Apply\n      </label>\n    </div>\n  </div>\n  )\n}\nexport default Panel","import { useState, useRef, useEffect } from 'react'\nimport './styles/app.css'\nimport Uploader from './components/Uploader'\nimport Panel from './components/Panel'\n\nfunction App() {\n  const [image, setImage] = useState(null)\n  const [file, setFile] = useState({\n    name: '',\n    width: '',\n    height: ''\n  })\n  const [clock, setClock] = useState(0)\n  const canvasRef = useRef()\n\n  useEffect(() => {\n    if (image) {\n      measure(() => rotate(image, 0))\n    }\n  }, [image])\n\n  const uploadHandler = (file) => {\n    if (file) {\n      const reader = new FileReader()\n      const img = new Image()\n      reader.readAsDataURL(file)\n      reader.onload = event => {\n        img.src = event.target.result\n      }\n      img.onload = event => {\n        setFile({\n          name: file.name,\n          width: img.width,\n          height: img.height\n        })\n        setImage(img)\n      }\n    }\n  }\n\n  const angleHandler = (val) => {\n    measure(() => rotate(image, val))\n  }\n\n  const rotate = (img, angle = 0) => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n    const MAX_WIDTH = 960 // 640 * 1.5\n    const MAX_HEIGHT = 720 // 480 * 1.5\n    const iw = img.width\n    const ih = img.height\n    const r = Math.sqrt((ih/2)**2 + (iw/2)**2)\n    const r2 = r * 2\n\n    const scale = Math.min(1,\n      MAX_WIDTH / r2,\n      MAX_HEIGHT / r2\n    )\n\n    canvas.height = r2 * scale\n    canvas.width = r2 * scale\n\n    const ax = Math.cos(angle * Math.PI / 180) * scale\n    const ay = Math.sin(angle * Math.PI / 180) * scale\n\n    context.setTransform(1, 0, 0, 1, 0, 0) // reset unit matrix\n    context.clearRect(0, 0, canvas.width, canvas.height)\n    context.setTransform(ax, ay, -ay, ax, r * scale , r * scale)\n    context.drawImage(img, -iw / 2, -ih / 2)\n    context.setTransform(1, 0, 0, 1, 0, 0)\n  }\n\n  const measure = (func) => {\n    const startTime = performance.now()\n    func()\n    const endTime = performance.now()\n    const diff = endTime - startTime\n    return setClock(diff)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">Image Rotator</div>\n      <div className=\"container\">\n        <div className=\"sidebar\">\n          <Uploader callback={uploadHandler} />\n          <Panel callback={angleHandler} file={file} />\n        </div>\n      <div className=\"main\">\n        <div className=\"timer\">rendered in {clock} ms</div>\n        <canvas className=\"canvas\" ref={canvasRef} width={640} height={480}></canvas>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/index.css'\n\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}